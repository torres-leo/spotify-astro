---
import { allPlaylists, songs } from '@/lib/data';
import { CardPlayButton } from '@/components/CardPlayButton';
import Layout from '@/layouts/Layout.astro';
import MusicsTable from '@/components/MusicsTable.astro';
import PlayListItemCard from '@/components/PlayListItemCard.astro';

const { id } = Astro.params;

const playlist = allPlaylists.find((playlist) => playlist.id === id);

const playListSongs = songs.filter((song) => song.albumId === playlist?.albumId);
---

<Layout title='Spotify Clone'>
	<div
		id='playlist-container'
		class='relative flex flex-col h-full overflow-x-hidden'
		transition:name=`playlist ${id} box`>
		<!-- <PageHeader /> -->

		<header class='flex gap-8 px-6 mt-10'>
			<picture class='aspect-square h-52 w-52 flex-none'>
				<img
					src={playlist?.cover}
					alt=`cover ${playlist?.title}`
					class='object-cover w-full h-full shadow-lg'
					transition:name=`playlist ${playlist?.id} image`
				/>
			</picture>

			<div class='flex flex-col justify-between'>
				<h2 class='flex flex-1 items-end text-white'>Playlist</h2>
				<div>
					<h1 class='text-6xl font-bold block text-white'>
						{playlist?.title}
						<span transition:name=`playlist ${playlist?.id} title`> </span>
					</h1>
				</div>

				<div class='flex-1 flex items-end'>
					<div class='text-sm text-gray-300 font-normal'>
						<div transition:name=`playlist ${playlist?.id} artists`>
							<span>{playlist?.artists.join(', ')}</span>
						</div>
						<p class='mt-1 text-gray-400/80'>
							<span class=''>{playListSongs.length} songs.</span> 3h, approx.
						</p>
					</div>
				</div>
			</div>
		</header>

		<div class='pl-6 pt-6'>
			<CardPlayButton id={id} client:load size='large' />
		</div>

		<div class='relative z-10 px-6 pt-10'></div>

		<div
			class='absolute inset-0 bg-gradient-to-t from-zinc-900 via-zinc-900/80 -z-10'
			transition:name=`playlist ${id} overlay`>
		</div>

		<section class='p-6'>
			<MusicsTable songs={playListSongs} />
		</section>
	</div>
</Layout>

<style></style>
